Volatility Technology Preview Developer information
===================================================
Michael Cohen <scudette@gmail.com>
September 2012
:toc:
:icons:
:data-uri:
:numbered:


Testing
-------

Previously testing was ad-hoc in the sense that users would run the
plugins they were interested in on their own images, and report any obvious
failures (e.g. an exception or no output at all). However, there was no way to
easily determine if particular plugins stopped working as expected.

The Technology Preview edition of Volatility introduces an automated testing
framework to assist in detecting regressions and bugs when handling different
images. The idea is to automatically compare the output of volatility (or
another tool) between different runs for each plugin. If the output differs, a
regression bug may have been uncovered.

We do this by creating a 'baseline' file which describes the output of one
version of volatility. Ideally the baseline file is the ground truth and can be
independently verified to be correct. We then run the current version of
volatility against the baseline and compare the output in some way.

The baseline itself is created using a template which is generated by the test
case itself. This template can be tweaked for the specific image we have.

The process is therefore:

- Create a test directory and place the image inside it (or a symlink).

- Create a test template for this image. The template specifies information
about executing volatiltiy for each test. For example, command line
parameters. Note that common data is interpolated from the DEFAULT section:

.Sample test configuration file.
------------------------------------------------------------------------
[DEFAULT]
profile = WinXPSP2x86
active = True
filename = xp-laptop-2005-06-25.img

[TestMemmap]
--profile = %(profile)s
commandline = memmap --pid=2624
--filename = %(filename)s
active = True
------------------------------------------------------------------------

-------------------------------------------------------------------
$ python tools/testing/build_suite.py template \                <1>
  --file xp-laptop-2005-06-25_trunk/xp-laptop-2005-06-25.img    <2>
-------------------------------------------------------------------

<1> Run the tool in template mode.
<2> Specify the image the template will use - the template file is placed in the
same directory.


- Build baselines for all the tests specified in this template. It might be
necessary to manually tweak the template here (for example if command line args
have changed between the old and new versions.).

-------------------------------------------------------------------
$ python tools/testing/build_suite.py baseline \                <1>
  --config xp-laptop-2005-06-25_trunk/tests.config \            <2>
  -e "python branches/2.3-devel/vol.py"                         <3>
-------------------------------------------------------------------

<1> Run the tool in baseline mode.
<2> Specify the testing template to use.
<3> Specify the binary to run - in this case we use the 2.3-dev version as a
baseline.


The tool will create a json file for each test in the testing directory. This is
called the baseline data. The baseline contains information about the output
generated:

.Sample baseline image for a test case.
-------------------------------------------------------------------
{
    "time_used": 4.6139168739318848,
    "output": [
        "Offset(V) ||Name                ||   PID||  PPID||  Thds||    Hnds||  Sess|| Wow64||Start               ||Exit                ",
        "----------||--------------------||------||------||------||--------||------||------||--------------------||--------------------",
        "0x823c87c0||System              ||     4||     0||    61||    1140||------||     0||                    ||                    ",
        "0x81fdf020||smss.exe            ||   448||     4||     3||      21||------||     0||2005-06-25 16:47:28 ||                    ",
        "0x81ed84e8||dd.exe              ||  4012||  2624||     1||      22||     0||     0||2005-06-25 16:58:46 ||                    "
    ],
    "options": {
        "--profile": "WinXPSP2x86",
        "commandline": "pslist",
        "--filename": "/tmp/xp-laptop-2005-06-25_trunk/xp-laptop-2005-06-25.img",
        "executable": "python /home/scudette/projects/volatility/trunk/vol.py",
        "mode": "trunk"
    }
}
-------------------------------------------------------------------

- Finally test the current output against the baseline:

-------------------------------------------------------------------
$ python tools/testing/build_suite.py test \                    <1>
  --config xp-laptop-2005-06-25_trunk/tests.config              <2>
-------------------------------------------------------------------

<1> Run the tool in test mode.
<2> Specify the testing template to use.

The test will run and be compared with the baseline. The test will fail if there
was any discrepancy with the baseline.

[NOTE]
================================================================================
The --executable and --mode parameters specify the path to the binary and its
type used for running the test. This is used to used to compensate for expected
differences in output (by applying regex'es for example). If you are testing the
technology preview against the trunk version you would specify --mode=trunk when
building the baseline, but not when running the test.
================================================================================


