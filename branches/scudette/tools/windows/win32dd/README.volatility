
Win32dd adapted for use in Volatility
=====================================
This open source memory acquisition driver has been modified to support a random
read() interface. This allows volatility to open the raw physical memory device
on a live system and analyse the live system itself.

This mode of operation is useful for forensic analysis of the running system for
prelimenary examination, as well as for educational purposes. It is most useful
to run the volatility shell on the live system to learn about kernel internals,
experiment with new code etc.

NOTE: This code is based on a 2009 release that I had, which was originally
published on the Moonsol site. The code seems to have disappered from that site
since and is therefore replicated in full here, to make it easier for people to
find.


Building in Linux
=================
This code can be built in the linux environment:
  - First install scons - the python based build system.

  - Next install the driver DDK from
    http://msdn.microsoft.com/en-us/windows/hardware/gg487428. This needs to be
    installed on a real windows machine since the installer fails in wine.

  - Zip up the WinDDK folder from the windows machine and unzip to your linux
    machine at ~/.wine/drive_c/WINDDK/version/

  - change to the driver directory and type scons to build the driver. The
    script will basically call wine to run the microsoft compilers from the
    WINDDK directory.

  - It is recommended that the device name be changed in an incident response
    situation to avoid some easy rootkit subversion.

  - Copy the win32dd.sys to the target windows system and a recent volatility
    binary. You can instruct volatility to load the driver automatically (you
    need to be an administrator), by using the --memory_driver and the
    --memory_device options.


Michael Cohen (scudette@gmail.com)