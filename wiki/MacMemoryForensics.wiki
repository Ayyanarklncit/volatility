#summary Instructions on how access and use the Mac OS X support
#labels Deprecated

= Overview =

These are the instructions for using the new Mac support in Volatility. A presentation on the initial set of features is [http://www.slideshare.net/AndrewDFIR/mac-memory-analysis-with-volatility here].

NOTE: This initial set of instructions *will* change as the mac branch is updated to align with the coding style and functions of trunk. *Please* check back on this wiki and always test the latest version before filing bug reports. 

= Changes since the presentation =

The presentation was based on an old code base. To run the plugins shown in the presentation, do not use the "profile_file" option and instead pass the name of your profile (explained later) to the "profile" option. You also do not have to use the "--no-cache" option anymore. Example:

{{{
$ python vol.py -f <name of memory dump> --profile=<profile name> plugin_name <optional plugin options>
}}}

= Getting the source =

The source can be currently downloaded by checking out with SVN:

{{{
$ svn co http://volatility.googlecode.com/svn/branches/mac-trunk mac-trunk
}}}

It can be browsed here:

http://code.google.com/p/volatility/source/browse/#svn%2Fbranches%2Fmac-trunk

= Creating a profile =

In the near future, the volatility source code will include profiles for the most common Mac kernels. Until then, you'll need to create your own profile. 

To create a profile, you first need to download the !KernelDebugKit for the kernel you want to analyze. This can be downloaded from the [http://developer.apple.com/hardwaredrivers Apple Developer's website] (click OS X Kernel Debug Kits on the right). This account is free and only requires a valid Email address. 

Note: The most recent kernel debug kit available is 10.7.4. If you have a kernel 10.8.0 or greater, go ahead and use the 10.7.4 kit until apple releases newer versions. 

After the !DebugKit is downloaded, mount the dmg file. This will place the contents at "/Volumes/!KernelDebugKit". 

== Creating the vtypes ==

=== Step 1 ===

The first step is to get the dwarf (debug) info from the kernel. The following shows how this can be done for the 32 bit debug information:

{{{
$ dwarfdump -arch i386 -i /Volumes/KernelDebugKit/DEBUG_Kernel/mach_kernel.dSYM/Contents/Resources/DWARF/mach_kernel > 10.7.2.32bit.dwarfdump
}}}

You would use "-arch x86_64" for the 64 bit information.

Note: The output file name can be anything you want.

=== Step 2 ===

The next step is to convert the Mac dwarfdump output to the Linux style output supported by Volatility:

{{{
$ python tools/mac/convert.py 10.7.2.32bit.dwarfdump converted-10.7.2.32bit.dwarfdump 1
}}}

Note: The last argument "1" needs to be there and is not a typo

=== Step 3 ===

Create the vtypes file from the converted file

{{{
$ python tools/mac/convert.py converted-10.7.2.32bit.dwarfdump > 10.7.2.32bit.vtypes
}}}

== Symbol Information ==

{{{
$ dsymutil -s -arch i386 /mach_kernel > 10.7.2.32bit.symbol.dsymutil 
}}}


== Creating the profile (zip) ==

{{{
$ zip 10.7.2.32bit.zip 10.7.2.32-bit.symbol.dsymutil 10.7.2.32bit.vtypes 
}}}

The zip file is now what you use as the profile. Copy the profile into the "volatility/plugins/overlays/mac" directory and then run:

{{{
$ python vol.py --info | grep Mac
}}}

and find the name of your profile. This is what you will use to the --profile option.

= Acquiring memory =

Volatility does not provide the ability to acquire memory. We recommend using [http://www.cybermarshal.com/index.php/cyber-marshal-utilities/mac-memory-reader Mac Memory Reader] from ATC-NY for this purpose. It supports 32 and 64 bit captures from native hardware, parallels, and virtual box. It currently does not support VMware fusion guests.


= Plugins =

To see how to use some of the initial plugins, read the presentation referenced above. To find all currently available plugins:

{{{
$ python vol.py --info | grep mac_
}}}

= Questions/Comments =

Please contact Andrew Case (atcuno) with any questions or comments

= Filing Bugs = 

Please use the issue tracker to file bugs: http://code.google.com/p/volatility/issues/list

= Known Issues =

The 'psaux' plugin will break if you get a memory capture from a 64 bit machine booted into a 32 bit kernel.