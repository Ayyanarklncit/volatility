#summary Frequently Asked Questions
#labels Featured

<wiki:toc max_depth="1" />

= What is the latest version of Volatility? =

2.0

= What's new in 2.0? =   

Highlights of this release include:

    * Restructured and depolluted namespace
    * Usage and Development Documentation
    * New Configuration Subsystem
    * New Caching Subsystem
    * New Pluggable address spaces with automated election
    * New Address Spaces (i.e. EWF, [Vol20AddressSpacesFirewire Firewire])
    * Updated Object Model and Profile Subsystems ([Vol20VolatilityMagic VolatilityMagic])
    * Support for Windows Server 2003, Windows Vista, Windows Server 2008, Windows 7
    * Updated Scanning Framework
    * Volshell integration
    * Over 40 new plugins!


= Are Volatility 1.3 plugins compatible with 2.0? =

No.  A lot has changed since Volatility 1.3 making older plugins incompatible with the current code base.  The good news is most public plugins have been ported to 2.0 already.  You can check the [CommandReference] wiki to see if the plugin you are looking for is there.  If not you will need to convert the plugin to work with the current code base.  See [ConvertingPluginsFromVol13toVol20] for details on how to do this.

= What operating systems does Volatility support? =

Microsoft Windows:
 * 32bit Windows XP Service Pack 2 and 3
 * 32bit Windows 2003 Server Service Pack 0, 1, 2
 * 32bit Windows Vista Service Pack 0, 1, 2
 * 32bit Windows 2008 Server Service Pack 1, 2 ([http://blogs.msdn.com/b/iainmcdonald/archive/2008/02/15/windows-server-2008-is-called-sp1-adventures-in-doing-things-right.aspx there is no SP0])
 * 32bit Windows 7 Service Pack 0, 1

Linux:
 * Volatility doesn't currently support linux memory images, but will  in the next version (after 2.0). For more information, see:

 * [http://dfsforensics.blogspot.com/2011/03/bringing-linux-support-to-volatility.html Bringing Linux Support To Volatility] 
 * [http://dfsforensics.blogspot.com/2011/03/analyzing-new-honeynet-memory-analysis.html Analyzing the New Honeynet Memory Challenge with Volatility] by Andrew Case.
 * The winning submissions to [https://www.honeynet.org/challenges/2011_7_compromised_server Honeynet's Forensic Challenge #7], which leveraged Volatility.
 * [http://www.digitalforensicssolutions.com/papers/blackhat-workshop-full-presentation.pdf Linux Memory Analysis Workshop at Blackhat USA 2011 by Andrew Case] 

= What about reading crash dumps and hibernation files? = 

Volatility should automatically determine whether you've asked it to analyze a crash dump file or a hiberation file, and allow you to run plugins against them just like normal.

If you'd like to save these files as raw dd files, you can use the [http://code.google.com/p/volatility/wiki/CommandReference#imagecopy imagecopy] plugin to convert them to raw memory images. The raw memory images can also be analyzed using the normal Volatility commands.

= Can Volatility acquire physical memory? =

Short answer: No.  
Long Answer: The [http://code.google.com/p/volatility/wiki/CommandReference#imagecopy imagecopy] plugin can be used to copy one address space to a file (allowing acquisition from address spaces such as IEEE 1394), but in general no, to acquire memory, you must use another tool. For a list of possibilities, see: [http://www.forensicswiki.org/wiki/Tools:Memory_Imaging The Forensics Wiki]

= Where do I find the "malware" plugins? = 

The most recent version can be downloaded from [http://malwarecookbook.googlecode.com/svn/trunk/malware.py here].

= How can I run external plugins with the standalone executable? =

With the standalone executable you have to specify the location of external plugins directory or zipfile using the "--plugins" switch.  In general you can specify the path of the item "--plugins=<path to directory/zipfile>".  An example using a directory called "plugins" can be seen below:

{{{
C:\vol>volatility.exe --plugins=..\plugins malfind -f c:\memory_images\win7.dd --profile=Win7SP0x86 -D output
Volatile Systems Volatility Framework 2.0 
Name                 Pid    Start      End        Tag      Hits   Protect
svchost.exe          740    0x005b0000 0x5f0fff00 Vad      0      PAGE_EXECUTE_WRITECOPY
Dumped to: output\svchost.exe.3e3949d0.005b0000-005f0fff.dmp
0x005b0000   4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00    MZ..............
0x005b0010   b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00    ........@.......
0x005b0020   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................
0x005b0030   00 00 00 00 00 00 00 00 00 00 00 00 d8 00 00 00    ................
0x005b0040   0e 1f ba 0e 00 b4 09 cd 21 b8 01 4c cd 21 54 68    ........!..L.!Th
0x005b0050   69 73 20 70 72 6f 67 72 61 6d 20 63 61 6e 6e 6f    is program canno
0x005b0060   74 20 62 65 20 72 75 6e 20 69 6e 20 44 4f 53 20    t be run in DOS
0x005b0070   6d 6f 64 65 2e 0d 0d 0a 24 00 00 00 00 00 00 00    mode....$.......
[snip]
}}}

You can also give Volatility a zipfile containing plugins:

{{{
C:\vol>volatility.exe --plugins=malfind.zip malfind -f c:\memory_images\win7.dd --profile=Win7SP0x86 -D output
Volatile Systems Volatility Framework 2.0 
Name                 Pid    Start      End        Tag      Hits   Protect
svchost.exe          740    0x005b0000 0x5f0fff00 Vad      0      PAGE_EXECUTE_WRITECOPY
Dumped to: output\svchost.exe.3e3949d0.005b0000-005f0fff.dmp
0x005b0000   4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00    MZ..............
0x005b0010   b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00    ........@.......
0x005b0020   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................
0x005b0030   00 00 00 00 00 00 00 00 00 00 00 00 d8 00 00 00    ................
0x005b0040   0e 1f ba 0e 00 b4 09 cd 21 b8 01 4c cd 21 54 68    ........!..L.!Th
0x005b0050   69 73 20 70 72 6f 67 72 61 6d 20 63 61 6e 6e 6f    is program canno
0x005b0060   74 20 62 65 20 72 75 6e 20 69 6e 20 44 4f 53 20    t be run in DOS
0x005b0070   6d 6f 64 65 2e 0d 0d 0a 24 00 00 00 00 00 00 00    mode....$.......
[snip]
}}}

*Note:* Due to the way plugins are loaded, the external plugins directory or zipfile must be specified before any plugin-specific arguments (including the name of the plugin).  

= Are there any public memory samples available that I can use for testing? =

Yes, see the list below.

Images from The [http://www.malwarecookbook.com Malware Analyst's Cookbook]

|| *Description*    || *url* || *OS* ||
|| be2.vmem.zip || [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/17/6/be2.vmem.zip be2.vmem.zip]|| XP SP2 ||
|| coreflood.vmem.zip || [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/16/6/coreflood.vmem.zip coreflood.vmem.zip] || XP SP2 ||
|| laqma.vmem.zip || [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/16/7/laqma.vmem.zip laqma.vmem.zip] || XP SP2 ||
|| prolaco.vmem.zip || [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/15/6/prolaco.vmem.zip prolaco.vmem.zip]|| XP SP2 ||
|| sality.vmem.zip || [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/17/11/sality.vmem.zip sality.vmem.zip]|| XP SP2 ||
||  silentbanker.vmem.zip || [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/16/6/silentbanker.vmem.zip silentbanker.vmem.zip]|| XP SP2 ||
|| tigger.vmem.zip|| [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/17/8/tigger.vmem.zip tigger.vmem.zip]|| XP SP2 ||
|| zeus.vmem.zip|| [http://malwarecookbook.googlecode.com/svn-history/r26/trunk/17/1/zeus.vmem.zip zeus.vmem.zip]|| XP SP2 ||

Other Images 

|| *Description*    || *url* || *OS* ||
|| Stuxnet image || [http://malwarecookbook.googlecode.com/svn/trunk/stuxnet.vmem.zip stuxnet.vmem.zip]|| XP SP3 ||
|| NIST || [http://www.cfreds.nist.gov/mem/memory-images.rar http://www.cfreds.nist.gov/mem/memory-images.rar]|| XP SP2 ||
||Hogfly's malware memory samples || [http://cid-5694a755c9c6a175.skydrive.live.com/browse.aspx/Public  http://cid-5694a755c9c6a175.skydrive.live.com/browse.aspx/Public]|| ? ||
||Moyix's Fuzzy Hidden Process Sample || [http://amnesia.gtisc.gatech.edu/~moyix/ds_fuzz_hidden_proc.img.bz2 http://amnesia.gtisc.gatech.edu/~moyix/ds_fuzz_hidden_proc.img.bz2]|| XP SP3 ||
||Honeynet Banking Troubles Image || [https://www.honeynet.org/challenges/2010_3_banking_troubles https://www.honeynet.org/challenges/2010_3_banking_troubles]|| XP SP2 ||
||NPS 2009-M57|| [http://domex.nps.edu/corp/scenarios/2009-m57/ram/ http://domex.nps.edu/corp/scenarios/2009-m57/ram/] ||  Various XP / Vista ||
|| [http://dougee652.blogspot.com/2011/04/malware-memory-images.html Dougee's comparison samples] || [http://dl.dropbox.com/u/21148428/xp-clean.tgz before] and [http://dl.dropbox.com/u/21148428/xp-infected.tgz after infection] || XP ||
|| Shylock Sample || [http://various-things.googlecode.com/files/vmem2.zip Shylock vmem] || XP ||
|| !R2D2 Sample || [http://www.mediafire.com/file/yxqodp1p2aca91x/0zapftis.rar 0zapftis.rar] (pw: infected) || XP SP2 ||

<br>
= What are the dependencies for running Volatility? =

Note: once the installers are released, update this section since some installers come pre-packaged with python and the dependencies. 

Here is what you need for the core functionality:

 * A Windows, Linux, or Mac OS X machine
 * Python version 2.6 or greater (but not 3.x)

Some plugins require third party libraries which you can get here:

 * [http://code.google.com/p/distorm/ Distorm3] (Malware Plugins, Volshell) 
 * [http://code.google.com/p/yara-project/ Yara] (Malware Plugins)
 * [http://gitweb.pycrypto.org/?p=crypto/pycrypto-2.0.x.git;a=summary PyCrypto] (Core)
 * [http://docs.python.org/library/sqlite3.html Sqlite3] 

If you are still using the 1.3 branch of Volatility, then you may need:

 * [http://libdasm.googlecode.com pydasm] 
 * [http://pefile.googlecode.com pefile]

= How do I run Volatility? =

See [BasicUsage] and [CommandReference] for information on how to use Volatility.

= Who wrote/is writing Volatility? =

See the AUTHORS.txt and CREDITS.txt files provided with the Volatility source code. 

= How can I contribute to Volatility? =

If you have documentation, code or ideas to contribute, use one of the following methods:

 * Through the [http://code.google.com/p/volatility/issues/list Google Code web interface]
 * Through IRC: #volatility on freenode 
 * Through the [http://lists.volatilesystems.com/mailman/listinfo Volatility Mailing List]

= I'm getting an error: "`[..]` (!ImportError: No module named Crypto.Hash)" =

This error occurs when [http://code.google.com/p/volatility/wiki/FullInstallation#Installation_Prerequisites PyCrypto is not installed].  This is a library that is used by some of the registry plugins like [http://code.google.com/p/volatility/wiki/CommandReference#lsadump lsadump].  You will see this error message when using any of the plugins, however.  If you are not using lsadump, hashdump or any other registry plugin that uses !PyCrypto, then you can safely ignore the error message.  Otherwise, install !PyCrypto and the message will disappear.  See [FullInstallation] for more details on how to install supporting libraries.

= How can I report a bug or feature request? =

See the answer to the contribution question.

= Where can I find additional documentation on Volatility? =

See the following resources:

 * There are a few installation guides and how-to's provided by the community which you can find on the [http://code.google.com/p/volatility/downloads/list Downloads Page]
 * The [http://code.google.com/p/volatility/wiki/DocFiles20 Volatility Documentation Project Wiki] contains links to external web sites.
 * [http://www.malwarecookbook.com Malware Analyst's Cookbook] devotes 4 chapters to using Volatility for malware analysis.