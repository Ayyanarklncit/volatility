#summary Frequently Asked Questions
#labels Featured

<wiki:toc />

= General = 

== What is the latest stable version of Volatility ==

The latest stable version is 2.1. It was released July 2012. The code in available in the following formats, all of which can be found on the [http://code.google.com/p/volatility/downloads/list Downloads page]. 

 * Source code in zip or tar archive (all platforms). 
 * Pyinstaller executable (Windows only).
 * Standalone executable (Windows only). 

If you plan to develop your own plugins or address spaces, or just want to see how Volatility works, choose the source code or Pyinstaller executable. You must already have a Python interpreter and dependent libraries installed. To just be up and running in a matter of seconds, choose the standalone executable - it comes packaged with Python and the dependencies. The standalone executable is portable and can be run from USB drives or CDROMs.

== What's new in 2.1 ==

Please see the [http://code.google.com/p/volatility/wiki/VolatilityRoadmap#Volatility_2.1_(Official_x64_Support) VolatilityRoadmap 2.1 Release]

== What is the latest development version of Volatility ==

The VolatilityRoadmap should tell you everything you need to know about upcoming release dates and features. We always make an effort to keep the code in [http://code.google.com/p/volatility/source/checkout svn trunk] as stable as possible, while preparing it for the next release. For that reason, we may fork and perform development in a separate [http://code.google.com/p/volatility/source/browse/#svn/branches branch] and then merge it back in with trunk after the necessary testing. 

Currently, there are several major new features under development in separate branches. For example, the [http://code.google.com/p/volatility/source/browse/#svn/branches/linux-trunk linux-trunk] and [http://code.google.com/p/volatility/source/browse/#svn/branches/mac-trunk mac-trunk] provide memory analysis capabilities for linux and mac osx systems, respectively. They are planned to be merged with trunk for the 2.2 release (October 2012). Also, the [http://code.google.com/p/volatility/source/browse/#svn/branches/scudette technology preview] branch is being designed in preparation for the exciting new features coming in 3.0. 

== What operating systems are supported ==

The 2.1 release supports the following:

 * Microsoft Windows:
    * 32-bit Windows XP Service Pack 2 and 3
    * 32-bit Windows 2003 Server Service Pack 0, 1, 2
    * 32-bit Windows Vista Service Pack 0, 1, 2
    * 32-bit Windows 2008 Server Service Pack 1, 2 (there is no SP0)
    * 32-bit Windows 7 Service Pack 0, 1
    * 64-bit Windows XP Service Pack 1 and 2 (there is no SP0)
    * 64-bit Windows 2003 Server Service Pack 1 and 2 (there is no SP0)
    * 64-bit Windows Vista Service Pack 0, 1, 2
    * 64-bit Windows 2008 Server Service Pack 1 and 2 (there is no SP0)
    * 64-bit Windows 2008 R2 Server Service Pack 0 and 1
    * 64-bit Windows 7 Service Pack 0 and 1

Development branches as described above contain support for the following additional systems:

 * Mac OS X:
    * 32-bit and 64-bit 10.6.x Snow Leopard (partial support only)
    * 32-bit and 64-bit 10.7.x Lion (full support)
    * 32-bit and 64-bit 10.8.x Mountain Lion (partial support only)
 * Linux and Android:
    * 32-bit Linux 2.6.9 - 3.x 
    * 64-bit Linux 2.6.9 - 3.x

== What memory dump formats are supported == 

The following formats for Windows memory dumps are supported:

 * Raw dd style, such as those produced by most live acquisition tools and VMware's .vmem files
 * Microsoft Crash Dump 
 * Hibernation (hiberfil.sys) files 
 * EWF (requires installation of [http://sourceforge.net/projects/libewf/ libewf])
 
Volatility will automatically determine which format your file is in and treat it accordingly. However, if you wish to convert your sample to raw format, use [http://code.google.com/p/volatility/wiki/CommandReference21#imagecopy imagecopy]. You can also convert from raw to a crash dump with [http://code.google.com/p/volatility/wiki/CommandReference21#raw2dmp raw2dmp]. 

In addition, the 2.2 release of Volatility is planned to support: 

  * !VirtualBox ELF64 core dumps (thanks to Philippe Teuwen) 
  * VMware snapshot and suspended state files - .vmss and .vmsn (thanks to Nir Izraeli)
  * LiME (Linux Memory Extractor) format for Linux and Android devices (thanks to Joe Sylve)

== Can Volatility acquire physical memory ==

== Is there a maximum memory dump size == 

There is technically no limit. We've heard reports of Volatility handling 30-40 GB images on both Windows and Linux host operating systems. If you routinely analyze large memory dumps and would like to supply some performance benchmarks for the FAQ, please let us know.

== How can I report a bug or feature request ==

See the contact section below. 

= Installation/Usage = 

== How do I install Volatility == 

If you're using the standalone Windows executable, no installation is necessary - it works right out of the box. If you downloaded the zip or tar source code archive, extract it on your Windows, Linux, or OSX system with Python 2.6 or greater (but not 3.0). For the most comprehensive plugin support, you should also install the following libraries: 

 * [http://code.google.com/p/distorm/ Distorm3] - Powerful Disassembler Library For x86/AMD64
 * [http://code.google.com/p/yara-project/ Yara] - A malware identification and classification tool
 * [https://www.dlitz.net/software/pycrypto/ PyCrypto] - The Python Cryptography Toolkit

If you do not install these libraries, you may see a warning message to raise your awareness, but all plugins that do not rely on the missing libraries will still work properly. 

== How do I use Volatility == 

If you're using the standalone Windows executable, run it from a command prompt: 

{{{
C:\> volatility.exe -h 
}}}

If you're using the Pyinstaller executable, run it using the python interpreter. The main vol.py script will be in the Scripts folder for your python version. Note: for convenience you might want to add the "C:\Python??" directory to your PATH environment variable. 

{{{
C:\> python C:\Python27\Scripts\vol.py -h 
}}}

If you're using the zip or tar source code archive, just run the vol.py script in the top level directory. For convenience on Linux/OSX systems, you might set up a command alias for "/usr/bin/python /path/to/vol.py" to be just "volatility" - then you can always type "volatility" from any directory.

{{{
$ python vol.py -h 
}}}

The -h/--help option shows the available plugins and other command-line parameters. It should be enough to get you started. If not, please read the BasicUsage21 or CommandReference21 wiki pages. 

= Contact = 

== Who wrote/is writing Volatility ==

See the AUTHORS.txt and CREDITS.txt files provided with the Volatility source code. 

== How can I contribute to Volatility ==

If you have documentation, code or ideas to contribute, use one of the following methods:

 * Through the [http://code.google.com/p/volatility/issues/list Google Code web interface]
 * Through IRC: #volatility on freenode 
 * Through the [http://lists.volatilesystems.com/mailman/listinfo Volatility Mailing List]