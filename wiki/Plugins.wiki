#summary A list of known Volatility plugins.

= Introduction =

A list of known Volatility plugins.


= Plugins =


||Plugin||Author||URL||Description||Status||Supported OSes||Core Vote||
||bioskbd||AB & MA||[http://code.google.com/p/volatility/source/browse/branches/Volatility-1.4_rc1/plugins/bioskbd.py url]||Reads the keyboard buffer from Real Mode memory||.||.||Yes||
||cryptoscan||JesseK||[http://jessekornblum.com/tools/volatility/cryptoscan.py url]||Finds Truecrypt passphrases||.||.||No||
||DriverIRP||MHL||[http://mhl-malware-scripts.googlecode.com/files/driverirp.py url]||[http://mnin.blogspot.com/2009/07/new-and-updated-volatility-plug-ins.html Prints driver IRP function addresses]||.||.||Yes||
||driverscan||Andreas Schuster||[http://computer.forensikblog.de/files/volatility_plugins/volatility_driverscan-current.zip url]||[http://computer.forensikblog.de/en/2009/04/scanning_for_drivers.html#more Scan for kernel _DRIVER_OBJECTs. (Note: If running the SVN version of Volatility, just install the plugin file from this archive.)]||.||.||Yes||
||dmp2raw||.||.||Convert a crash dump to a raw dump||.||.||.||
||fileobjscan AKA filescan (1.4 branch)||Andreas Schuster||[http://computer.forensikblog.de/files/volatility_plugins/volatility_fileobjscan-current.zip url]||[http://computer.forensikblog.de/en/2009/04/linking_file_objects_to_processes.html#more File object -> process linkage, including hidden files. (Note: If running the SVN version of Volatility, just install the plugin file from this archive.)]||.||.||Yes||
||getsids||Moyix||[http://moyix.blogspot.com/2008/08/linking-processes-to-users.html url]||[http://moyix.blogspot.com/2008/08/linking-processes-to-users.html Get information about what user (SID) started a process.]||.||.||Yes||
||IDT||MHL||[http://mhl-malware-scripts.googlecode.com/files/idt.py url]||[http://mnin.blogspot.com/2009/07/new-and-updated-volatility-plug-ins.html Prints the Interrupt Descriptor Table (IDT) addresses for one processor]||.||.||Yes||
||kernel_hooks||MHL||[http://mhl-malware-scripts.googlecode.com/files/kernel_hooks.py url]||[http://mnin.blogspot.com/2009/07/new-and-updated-volatility-plug-ins.html Detects IAT, EAT, and in-line hooks in kernel drivers instead of usermode modules]||.||.||Yes||
||keyboardbuffer||Andreas Schuster||[http://computer.forensikblog.de/files/volatility_plugins/keyboardbuffer.py url]||[http://computer.forensikblog.de/en/2009/04/read_password_from_keyboard_buffer.html#more Extracts keyboard buffer used by the BIOS, which may contain BIOS or disk encryption passwords.]||.||.||(Above)||
||kpcrscan||Bradley Schatz||[http://code.google.com/p/volatility/source/browse/branches/Volatility-1.4_rc1/plugins/internal/kpcrscan.py url]||Finds potential KPCR addresses||.||.||.||
||malfind2||MHL||[http://mhl-malware-scripts.googlecode.com/files/malfind2.py url]||[http://mnin.blogspot.com/2009/07/new-and-updated-volatility-plug-ins.html Automates the process of finding and extracting (usually malicious) code injected into another process]||.||.||Yes||
||moddump||Moyix||[http://moyix.blogspot.com/2008/10/plugin-post-moddump.html url]||Dump out a kernel module (aka driver)||.||.||Yes||
||mutantscan||Andreas Schuster||[http://computer.forensikblog.de/files/volatility_plugins/volatility_mutantscan-current.zip url]||[http://computer.forensikblog.de/en/2009/04/searching_for_mutants.html#more Extracts mutexes from the Windows kernel.(Note: If running the SVN version of Volatility, just install the plugin file from this archive.)]||.||.||No||
||objtypescan||Andreas Schuster||[http://computer.forensikblog.de/files/volatility_plugins/volatility_objtypescan-current.zip url]||[http://computer.forensikblog.de/en/2009/04/scanning_for_file_objects.html Enumerates Windows kernel object types. (Note: If running the SVN version of Volatility, just install the plugin file from this archive)]||.||.||Yes||
||orphan_threads||MHL||[http://mhl-malware-scripts.googlecode.com/files/orphan_threads.py url]||[http://mnin.blogspot.com/2009/07/new-and-updated-volatility-plug-ins.html Detects hidden system/kernel threads]||.||.||No||
||patcher||MA||[http://code.google.com/p/volatility/source/browse/branches/Volatility-1.4_rc1/plugins/internal/patcher.py url]||Patches memory based on page scans||.||.||Yes||
||psscan3||Moyix||[http://www.cc.gatech.edu/~brendan/volatility/dl/psscan3.py url]||[http://moyix.blogspot.com/2010/07/plugin-post-robust-process-scanner.html Scans the physical address space looking for memory resident data structures associated with processes.]||.||.|| Yes ||
||pstree||Scudette||[http://scudette.blogspot.com/2008/10/pstree-volatility-plugin.html url]||[http://scudette.blogspot.com/2008/10/pstree-volatility-plugin.html Produces a tree-style listing of processes]||.||.||Yes||
||raw2dmp||.||.||Convert a raw dump to a crash dump||.||.||.||
||Registry Tools||Moyix||[http://www.cc.gatech.edu/%7Ebrendan/volatility/dl/volreg-0.6.tar.gz url]||[http://moyix.blogspot.com/2009/01/memory-registry-tools.html A suite of plugins for accessing data from the registry, including password hashes, LSA secrets, and arbitrary registry keys]||.||.||Yes||
||Modified Regripper & Glue Code||Moyix||[http://www.cc.gatech.edu/%7Ebrendan/volatility/dl/volrip-0.1.tar.gz url]||[http://moyix.blogspot.com/2009/03/regripper-and-volatility-prototype.html Code to run a modified RegRipper against the registry hives embedded in a memory dump. Note that due to a dependency on Inline::Python, this only works on Linux.]||.||.||No||
||sqlite3||Gleeda||[http://jls-scripts.googlecode.com/files/vol_sql-0.2.tgz url]||[http://gleeda.blogspot.com/2010/01/volatilitys-output-rendering-functions.html Allows one to place Volatility output into a SQLite3 Database]||.||.||As example||
||ssdt||Moyix||[http://moyix.blogspot.com/2008/08/auditing-system-call-table.html url]|| [http://moyix.blogspot.com/2008/08/auditing-system-call-table.html List entries in the system call table. Can be used to detect certain rootkits that hook system calls by replacing entries in this table]||.||.||Yes||
||suspicious||JesseK||[http://jessekornblum.com/tools/volatility/suspicious.py url]||Identify suspicious processes. This version counts any command line running Truecrypt or any command line that starts with a lower case drive letter as suspicious||.||.||No||
||symlinkobjscan||Andreas Schuster||[http://computer.forensikblog.de/files/volatility_plugins/volatility_symlinkobjscan-current.zip url]||[http://computer.forensikblog.de/en/2009/04/symbolic_link_objects.html#more Extracts symbolic link objects from the Windows kernel.(Note: If running the SVN version of Volatility, just install the plugin file from this archive.)]||.||.||Yes||
||threadqueues||Moyix||[http://kurtz.cs.wesleyan.edu/%7Ebdolangavitt/memory/threadqueues.py url]||[http://moyix.blogspot.com/2008/09/window-messages-as-forensic-resource.html Enumerates window messages pending for each thread on the system. Window messages are the mechanism used to send things like button presses, mouse clicks, and other events to GUI programs.]||.||.||No||
||usermode_hooks||MHL||[http://mhl-malware-scripts.googlecode.com/files/usermode_hooks2.py url]||[http://mnin.blogspot.com/2009/07/new-and-updated-volatility-plug-ins.html Detect IAT/EAT/Inline rootkit hooks]||.||.||Yes||
||verinfo||MA||[http://code.google.com/p/volatility/source/browse/branches/Volatility-1.4_rc1/plugins/internal/verinfo.py url]||Prints out the version information from PE images||.||.||NO||
||Volatility Analyst Pack 0.1||MHL||[http://mhl-malware-scripts.googlecode.com/files/vap-0.1.zip url]||[http://mnin.blogspot.com/2009/12/new-and-updated-volatility-plug-ins.html A pack which contains updates to many of the listed modules]||.||.||(included above)||
||volshell||Moyix||[http://moyix.blogspot.com/2008/08/indroducing-volshell.html url]||[http://moyix.blogspot.com/2008/08/indroducing-volshell.html Creates a python shell can be used with the framework]||.||.||No||



----

= Existing 1.4 plugins =

||Plugin||Description||Primary Maintainer||Core Vote||
||bioskbd||Reads the keyboard buffer from Real Mode memory||MA||Yes||
||connections||Print list of open connections||.||Yes||
||connscan2||Scan Physical memory for _TCPT_OBJECT objects (tcp connections)||.||Yes||
||crashdump||Dumps the crashdump file to a raw file||.||Yes||
||crashinfo||Dump crash-dump information||.||Yes||
||datetime||Get date/time information for image||MA||Yes||
||dlllist||Print list of loaded dlls for each process||.||Yes||
||driverscan||Scan for driver objects _DRIVER_OBJECT||.||.||
||files||Print list of open files for each process||.||Yes||
||filescan||Scan Physical memory for _FILE_OBJECT pool allocations||.||.||
||getsids||Print the SIDs owning each process||moyix||Yes||
||hashdump||Dumps passwords hashes (LM/NTLM) from memory||moyix||Yes||
||hibdump||Dumps the hibernation file to a raw file||.||Yes||
||hibinfo||Dump hibernation file information||.||Yes||
||hivedump||Prints out a hive||moyix||Yes||
||hivelist||Print list of registry hives.||moyix||Yes||
||hivescan||Scan Physical memory for _CMHIVE objects (registry hives)||moyix||Yes||
||ident||Identify information for the image||MA||Yes||
||kpcrscan||Search for and dump potential KPCR values||scudette||Yes||
||lsadump||Dump (decrypted) LSA secrets from the registry||moyix||Yes||
||memdump||Dump the addressable memory for a process||.||Yes||
||memmap||Print the memory map||.||Yes||
||modscan2||Scan Physical memory for _LDR_DATA_TABLE_ENTRY objects||.||Yes||
||modules||Print list of loaded modules||MA||.||
||mutantscan||Scan for mutant objects _KMUTANT||.||.||
||patcher||Patches memory based on page scans||MA||Yes||
||printkey||Print a registry key, and its subkeys and values||moyix||Yes||
||procexedump||Dump a process to an executable file sample||.||Yes||
||procmemdump||Dump a process to an executable memory sample||.||Yes||
||pslist||print all running processes by following the EPROCESS lists||.||Yes||
||psscan||Scan Physical memory for _EPROCESS objects||.||Yes||
||pstree||Print process list as a tree||scudette||Yes||
||regobjkeys||Print list of open regkeys for each process||MA||.||
||sockets||Print list of open sockets||.||Yes||
||sockscan||Scan Physical memory for _ADDRESS_OBJECT objects (tcp sockets)||.||Yes||
||ssdt||Display SSDT entries||moyix||Yes||
||strings||Match physical offsets to virtual addresses (may take a while, VERY verbose)||.||.||
||thrdscan||Scan Physical memory for _ETHREAD objects||.||Yes||
||thrdscan2||Scan physical memory for _ETHREAD objects||.||Yes||
||vaddump||Dumps out the vad sections to a file||.||.||
||vadinfo||Dump the VAD info||.||.||
||vadtree||Walk the VAD tree and display in tree format||.||.||
||vadwalk||Walk the VAD tree||.||.||


----

= Plugins Left to Port to 1.4 =

||Plugin||Description||Primary Maintainer||Core Vote||
||DriverIRP||Prints driver IRP function addresses||.||Yes||
||IDT||Prints the Interrupt Descriptor Table (IDT) addresses for one processor||.||Yes||
||kernel_hooks||Detects IAT, EAT, and in-line hooks in kernel drivers instead of usermode modules||.||Yes||
||malfind2||Automates the process of finding and extracting (usually malicious) code injected into another process||.||Yes||
||moddump||Dump out a kernel module (aka driver)||.||Yes||
||objtypescan||Enumerates Windows kernel object types. (Note: If running the SVN version of Volatility, just install the plugin file from this archive)||.||Yes||
||psscan3||Scans the physical address space looking for memory resident data structures associated with processes||.|| Yes ||
||raw2dmp||Convert a raw dump to a crash dump||.||.||
||symlinkobjscan||Extracts symbolic link objects from the Windows kernel.(Note: If running the SVN version of Volatility, just install the plugin file from this archive.)||.||Yes||
||usermode_hooks||Inline rootkit hooks||.||Yes||